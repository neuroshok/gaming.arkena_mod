#pragma once
#include <ark/class.hpp>

#include <au/UnityEngine/Object.hpp>
#include <au/UnityEngine/Mesh.hpp>
#include <au/UnityEngine/Rendering/IndexFormat.hpp>
#include <au/System/Array.hpp>
#include <cs/array.hpp>
#include <au/System/Collections/Generic/List.hpp>
#include <cs/array.hpp>
#include <cs/array.hpp>
#include <au/UnityEngine/Rendering/VertexAttribute.hpp>
#include <cs/string.hpp>
#include <cs/array.hpp>
#include <au/Unity/Collections/NativeArray.hpp>
#include <cs/array.hpp>
#include <cs/array.hpp>
#include <cs/array.hpp>
#include <au/UnityEngine/Bounds.hpp>
#include <au/UnityEngine/Rendering/MeshUpdateFlags.hpp>
#include <cs/array.hpp>
#include <au/UnityEngine/Rendering/VertexAttribute.hpp>
#include <au/System/Collections/Generic/List.hpp>
#include <cs/array.hpp>
#include <cs/array.hpp>
#include <cs/array.hpp>
#include <cs/array.hpp>
#include <cs/array.hpp>
#include <au/System/Collections/Generic/List.hpp>
#include <au/Unity/Collections/NativeArray.hpp>
#include <cs/array.hpp>
#include <au/System/Collections/Generic/List.hpp>
#include <cs/array.hpp>
#include <au/System/Collections/Generic/List.hpp>
#include <cs/array.hpp>
#include <au/System/Collections/Generic/List.hpp>
#include <cs/array.hpp>
#include <cs/array.hpp>
#include <au/System/Collections/Generic/List.hpp>
#include <cs/array.hpp>
#include <au/System/Collections/Generic/List.hpp>
#include <au/UnityEngine/Mesh.hpp>
#include <cs/array.hpp>
#include <au/System/Collections/Generic/List.hpp>
#include <au/UnityEngine/Mesh/MeshDataArray.hpp>
#include <cs/array.hpp>
#include <au/System/Collections/Generic/List.hpp>
#include <au/System/Collections/Generic/List.hpp>
#include <au/Unity/Collections/NativeArray.hpp>
#include <cs/array.hpp>
#include <cs/array.hpp>
#include <cs/array.hpp>
#include <au/System/Collections/Generic/List.hpp>
#include <au/System/Collections/Generic/List.hpp>
#include <cs/array.hpp>
#include <au/System/Collections/Generic/List.hpp>
#include <au/System/Collections/Generic/List.hpp>
#include <au/System/Collections/Generic/List.hpp>
#include <cs/array.hpp>
#include <au/UnityEngine/Rendering/MeshUpdateFlags.hpp>
#include <cs/array.hpp>
#include <au/UnityEngine/Bounds.hpp>

namespace UnityEngine
{
    struct Mesh : ark::meta<Mesh, UnityEngine::Object>
    {

        void Internal_Create(UnityEngine::Mesh* mono) { return il2cpp::call<void(*)(Mesh*, UnityEngine::Mesh*)>(0x13990d0)(this, mono); } // 0x13990d0
        void ctor() { return il2cpp::call<void(*)(Mesh*)>(0x139c730)(this); } // 0x139c730
        UnityEngine::Mesh* FromInstanceID(int32_t id) { return il2cpp::call<UnityEngine::Mesh*(*)(Mesh*, int32_t)>(0x1397190)(this, id); } // 0x1397190
        UnityEngine::Rendering::IndexFormat get_indexFormat() { return il2cpp::call<UnityEngine::Rendering::IndexFormat(*)(Mesh*)>(0x139c920)(this); } // 0x139c920
        void set_indexFormat(UnityEngine::Rendering::IndexFormat value) { return il2cpp::call<void(*)(Mesh*, UnityEngine::Rendering::IndexFormat)>(0x139ce70)(this, value); } // 0x139ce70
        uint32_t GetTotalIndexCount() { return il2cpp::call<uint32_t(*)(Mesh*)>(0x13984d0)(this); } // 0x13984d0
        void SetIndexBufferParams(int32_t indexCount, UnityEngine::Rendering::IndexFormat format) { return il2cpp::call<void(*)(Mesh*, int32_t, UnityEngine::Rendering::IndexFormat)>(0x139a200)(this, indexCount, format); } // 0x139a200
        void InternalSetIndexBufferData(int data, int32_t dataStart, int32_t meshBufferStart, int32_t count, int32_t elemSize, UnityEngine::Rendering::MeshUpdateFlags flags) { return il2cpp::call<void(*)(Mesh*, int, int32_t, int32_t, int32_t, int32_t, UnityEngine::Rendering::MeshUpdateFlags)>(0x1399010)(this, data, dataStart, meshBufferStart, count, elemSize, flags); } // 0x1399010
        void InternalSetIndexBufferDataFromArray(System::Array* data, int32_t dataStart, int32_t meshBufferStart, int32_t count, int32_t elemSize, UnityEngine::Rendering::MeshUpdateFlags flags) { return il2cpp::call<void(*)(Mesh*, System::Array*, int32_t, int32_t, int32_t, int32_t, UnityEngine::Rendering::MeshUpdateFlags)>(0x1398fd0)(this, data, dataStart, meshBufferStart, count, elemSize, flags); } // 0x1398fd0
        void SetVertexBufferParamsFromPtr(int32_t vertexCount, int attributesPtr, int32_t attributesCount) { return il2cpp::call<void(*)(Mesh*, int32_t, int, int32_t)>(0x139c410)(this, vertexCount, attributesPtr, attributesCount); } // 0x139c410
        void SetVertexBufferParamsFromArray(int32_t vertexCount, cs::array<UnityEngine::Rendering::VertexAttributeDescriptor>* attributes) { return il2cpp::call<void(*)(Mesh*, int32_t, cs::array<UnityEngine::Rendering::VertexAttributeDescriptor>*)>(0x139c3e0)(this, vertexCount, attributes); } // 0x139c3e0
        void InternalSetVertexBufferData(int32_t stream, int data, int32_t dataStart, int32_t meshBufferStart, int32_t count, int32_t elemSize, UnityEngine::Rendering::MeshUpdateFlags flags) { return il2cpp::call<void(*)(Mesh*, int32_t, int, int32_t, int32_t, int32_t, int32_t, UnityEngine::Rendering::MeshUpdateFlags)>(0x1399090)(this, stream, data, dataStart, meshBufferStart, count, elemSize, flags); } // 0x1399090
        void InternalSetVertexBufferDataFromArray(int32_t stream, System::Array* data, int32_t dataStart, int32_t meshBufferStart, int32_t count, int32_t elemSize, UnityEngine::Rendering::MeshUpdateFlags flags) { return il2cpp::call<void(*)(Mesh*, int32_t, System::Array*, int32_t, int32_t, int32_t, int32_t, UnityEngine::Rendering::MeshUpdateFlags)>(0x1399050)(this, stream, data, dataStart, meshBufferStart, count, elemSize, flags); } // 0x1399050
        System::Array* GetVertexAttributesAlloc() { return il2cpp::call<System::Array*(*)(Mesh*)>(0x1398d80)(this); } // 0x1398d80
        int32_t GetVertexAttributesArray(cs::array<UnityEngine::Rendering::VertexAttributeDescriptor>* attributes) { return il2cpp::call<int32_t(*)(Mesh*, cs::array<UnityEngine::Rendering::VertexAttributeDescriptor>*)>(0x1398db0)(this, attributes); } // 0x1398db0
        int32_t GetVertexAttributesList(System::Collections::Generic::List<UnityEngine::Rendering::VertexAttributeDescriptor>* attributes) { return il2cpp::call<int32_t(*)(Mesh*, System::Collections::Generic::List<UnityEngine::Rendering::VertexAttributeDescriptor>*)>(0x1398de0)(this, attributes); } // 0x1398de0
        int32_t GetVertexAttributeCountImpl() { return il2cpp::call<int32_t(*)(Mesh*)>(0x1398c80)(this); } // 0x1398c80
        UnityEngine::Rendering::VertexAttributeDescriptor GetVertexAttribute(int32_t index) { return il2cpp::call<UnityEngine::Rendering::VertexAttributeDescriptor(*)(Mesh*, int32_t)>(0x1398d40)(this, index); } // 0x1398d40
        uint32_t GetIndexStartImpl(int32_t submesh) { return il2cpp::call<uint32_t(*)(Mesh*, int32_t)>(0x1397b50)(this, submesh); } // 0x1397b50
        uint32_t GetIndexCountImpl(int32_t submesh) { return il2cpp::call<uint32_t(*)(Mesh*, int32_t)>(0x1397a80)(this, submesh); } // 0x1397a80
        uint32_t GetTrianglesCountImpl(int32_t submesh) { return il2cpp::call<uint32_t(*)(Mesh*, int32_t)>(0x1398500)(this, submesh); } // 0x1398500
        uint32_t GetBaseVertexImpl(int32_t submesh) { return il2cpp::call<uint32_t(*)(Mesh*, int32_t)>(0x1397350)(this, submesh); } // 0x1397350
        cs::array<int32_t>* GetTrianglesImpl(int32_t submesh, bool applyBaseVertex) { return il2cpp::call<cs::array<int32_t>*(*)(Mesh*, int32_t, bool)>(0x1398530)(this, submesh, applyBaseVertex); } // 0x1398530
        cs::array<int32_t>* GetIndicesImpl(int32_t submesh, bool applyBaseVertex) { return il2cpp::call<cs::array<int32_t>*(*)(Mesh*, int32_t, bool)>(0x1397c20)(this, submesh, applyBaseVertex); } // 0x1397c20
        void SetIndicesImpl(int32_t submesh, UnityEngine::MeshTopology topology, UnityEngine::Rendering::IndexFormat indicesFormat, System::Array* indices, int32_t arrayStart, int32_t arraySize, bool calculateBounds, int32_t baseVertex) { return il2cpp::call<void(*)(Mesh*, int32_t, UnityEngine::MeshTopology, UnityEngine::Rendering::IndexFormat, System::Array*, int32_t, int32_t, bool, int32_t)>(0x139a230)(this, submesh, topology, indicesFormat, indices, arrayStart, arraySize, calculateBounds, baseVertex); } // 0x139a230
        void SetIndicesNativeArrayImpl(int32_t submesh, UnityEngine::MeshTopology topology, UnityEngine::Rendering::IndexFormat indicesFormat, int indices, int32_t arrayStart, int32_t arraySize, bool calculateBounds, int32_t baseVertex) { return il2cpp::call<void(*)(Mesh*, int32_t, UnityEngine::MeshTopology, UnityEngine::Rendering::IndexFormat, int, int32_t, int32_t, bool, int32_t)>(0x139a270)(this, submesh, topology, indicesFormat, indices, arrayStart, arraySize, calculateBounds, baseVertex); } // 0x139a270
        void GetTrianglesNonAllocImpl(cs::array<int32_t>* values, int32_t submesh, bool applyBaseVertex) { return il2cpp::call<void(*)(Mesh*, cs::array<int32_t>*, int32_t, bool)>(0x13985a0)(this, values, submesh, applyBaseVertex); } // 0x13985a0
        void GetTrianglesNonAllocImpl16(cs::array<uint16_t>* values, int32_t submesh, bool applyBaseVertex) { return il2cpp::call<void(*)(Mesh*, cs::array<uint16_t>*, int32_t, bool)>(0x1398560)(this, values, submesh, applyBaseVertex); } // 0x1398560
        void GetIndicesNonAllocImpl(cs::array<int32_t>* values, int32_t submesh, bool applyBaseVertex) { return il2cpp::call<void(*)(Mesh*, cs::array<int32_t>*, int32_t, bool)>(0x1397c90)(this, values, submesh, applyBaseVertex); } // 0x1397c90
        void GetIndicesNonAllocImpl16(cs::array<uint16_t>* values, int32_t submesh, bool applyBaseVertex) { return il2cpp::call<void(*)(Mesh*, cs::array<uint16_t>*, int32_t, bool)>(0x1397c50)(this, values, submesh, applyBaseVertex); } // 0x1397c50
        void PrintErrorCantAccessChannel(UnityEngine::Rendering::VertexAttribute ch) { return il2cpp::call<void(*)(Mesh*, UnityEngine::Rendering::VertexAttribute)>(0x1399480)(this, ch); } // 0x1399480
        bool HasVertexAttribute(UnityEngine::Rendering::VertexAttribute attr) { return il2cpp::call<bool(*)(Mesh*, UnityEngine::Rendering::VertexAttribute)>(0x1398f60)(this, attr); } // 0x1398f60
        int32_t GetVertexAttributeDimension(UnityEngine::Rendering::VertexAttribute attr) { return il2cpp::call<int32_t(*)(Mesh*, UnityEngine::Rendering::VertexAttribute)>(0x1398cb0)(this, attr); } // 0x1398cb0
        UnityEngine::Rendering::VertexAttributeFormat GetVertexAttributeFormat(UnityEngine::Rendering::VertexAttribute attr) { return il2cpp::call<UnityEngine::Rendering::VertexAttributeFormat(*)(Mesh*, UnityEngine::Rendering::VertexAttribute)>(0x1398ce0)(this, attr); } // 0x1398ce0
        void SetArrayForChannelImpl(UnityEngine::Rendering::VertexAttribute channel, UnityEngine::Rendering::VertexAttributeFormat format, int32_t dim, System::Array* values, int32_t arraySize, int32_t valuesStart, int32_t valuesCount, UnityEngine::Rendering::MeshUpdateFlags flags) { return il2cpp::call<void(*)(Mesh*, UnityEngine::Rendering::VertexAttribute, UnityEngine::Rendering::VertexAttributeFormat, int32_t, System::Array*, int32_t, int32_t, int32_t, UnityEngine::Rendering::MeshUpdateFlags)>(0x1399d10)(this, channel, format, dim, values, arraySize, valuesStart, valuesCount, flags); } // 0x1399d10
        void SetNativeArrayForChannelImpl(UnityEngine::Rendering::VertexAttribute channel, UnityEngine::Rendering::VertexAttributeFormat format, int32_t dim, int values, int32_t arraySize, int32_t valuesStart, int32_t valuesCount, UnityEngine::Rendering::MeshUpdateFlags flags) { return il2cpp::call<void(*)(Mesh*, UnityEngine::Rendering::VertexAttribute, UnityEngine::Rendering::VertexAttributeFormat, int32_t, int, int32_t, int32_t, int32_t, UnityEngine::Rendering::MeshUpdateFlags)>(0x139a950)(this, channel, format, dim, values, arraySize, valuesStart, valuesCount, flags); } // 0x139a950
        System::Array* GetAllocArrayFromChannelImpl(UnityEngine::Rendering::VertexAttribute channel, UnityEngine::Rendering::VertexAttributeFormat format, int32_t dim) { return il2cpp::call<System::Array*(*)(Mesh*, UnityEngine::Rendering::VertexAttribute, UnityEngine::Rendering::VertexAttributeFormat, int32_t)>(0x13972d0)(this, channel, format, dim); } // 0x13972d0
        void GetArrayFromChannelImpl(UnityEngine::Rendering::VertexAttribute channel, UnityEngine::Rendering::VertexAttributeFormat format, int32_t dim, System::Array* values) { return il2cpp::call<void(*)(Mesh*, UnityEngine::Rendering::VertexAttribute, UnityEngine::Rendering::VertexAttributeFormat, int32_t, System::Array*)>(0x1397310)(this, channel, format, dim, values); } // 0x1397310
        int32_t get_vertexBufferCount() { return il2cpp::call<int32_t(*)(Mesh*)>(0x139ccc0)(this); } // 0x139ccc0
        int GetNativeVertexBufferPtr(int32_t index) { return il2cpp::call<int(*)(Mesh*, int32_t)>(0x13981e0)(this, index); } // 0x13981e0
        int GetNativeIndexBufferPtr() { return il2cpp::call<int(*)(Mesh*)>(0x13981b0)(this); } // 0x13981b0
        int32_t get_blendShapeCount() { return il2cpp::call<int32_t(*)(Mesh*)>(0x139c7d0)(this); } // 0x139c7d0
        void ClearBlendShapes() { return il2cpp::call<void(*)(Mesh*)>(0x1396f80)(this); } // 0x1396f80
        cs::string* GetBlendShapeName(int32_t shapeIndex) { return il2cpp::call<cs::string*(*)(Mesh*, int32_t)>(0x1397650)(this, shapeIndex); } // 0x1397650
        int32_t GetBlendShapeIndex(cs::string* blendShapeName) { return il2cpp::call<int32_t(*)(Mesh*, cs::string*)>(0x1397620)(this, blendShapeName); } // 0x1397620
        int32_t GetBlendShapeFrameCount(int32_t shapeIndex) { return il2cpp::call<int32_t(*)(Mesh*, int32_t)>(0x1397570)(this, shapeIndex); } // 0x1397570
        float GetBlendShapeFrameWeight(int32_t shapeIndex, int32_t frameIndex) { return il2cpp::call<float(*)(Mesh*, int32_t, int32_t)>(0x13975e0)(this, shapeIndex, frameIndex); } // 0x13975e0
        void GetBlendShapeFrameVertices(int32_t shapeIndex, int32_t frameIndex, cs::array<UnityEngine::Vector3>* deltaVertices, cs::array<UnityEngine::Vector3>* deltaNormals, cs::array<UnityEngine::Vector3>* deltaTangents) { return il2cpp::call<void(*)(Mesh*, int32_t, int32_t, cs::array<UnityEngine::Vector3>*, cs::array<UnityEngine::Vector3>*, cs::array<UnityEngine::Vector3>*)>(0x13975a0)(this, shapeIndex, frameIndex, deltaVertices, deltaNormals, deltaTangents); } // 0x13975a0
        void AddBlendShapeFrame(cs::string* shapeName, float frameWeight, cs::array<UnityEngine::Vector3>* deltaVertices, cs::array<UnityEngine::Vector3>* deltaNormals, cs::array<UnityEngine::Vector3>* deltaTangents) { return il2cpp::call<void(*)(Mesh*, cs::string*, float, cs::array<UnityEngine::Vector3>*, cs::array<UnityEngine::Vector3>*, cs::array<UnityEngine::Vector3>*)>(0x1396760)(this, shapeName, frameWeight, deltaVertices, deltaNormals, deltaTangents); } // 0x1396760
        bool HasBoneWeights() { return il2cpp::call<bool(*)(Mesh*)>(0x1398f30)(this); } // 0x1398f30
        cs::array<UnityEngine::BoneWeight>* GetBoneWeightsImpl() { return il2cpp::call<cs::array<UnityEngine::BoneWeight>*(*)(Mesh*)>(0x1397680)(this); } // 0x1397680
        void SetBoneWeightsImpl(cs::array<UnityEngine::BoneWeight>* weights) { return il2cpp::call<void(*)(Mesh*, cs::array<UnityEngine::BoneWeight>*)>(0x1399d50)(this, weights); } // 0x1399d50
        void SetBoneWeights(Unity::Collections::NativeArray<uint8_t>* bonesPerVertex, Unity::Collections::NativeArray<UnityEngine::BoneWeight1>* weights) { return il2cpp::call<void(*)(Mesh*, Unity::Collections::NativeArray<uint8_t>*, Unity::Collections::NativeArray<UnityEngine::BoneWeight1>*)>(0x1399d80)(this, bonesPerVertex, weights); } // 0x1399d80
        void InternalSetBoneWeights(int bonesPerVertex, int32_t bonesPerVertexSize, int weights, int32_t weightsSize) { return il2cpp::call<void(*)(Mesh*, int, int32_t, int, int32_t)>(0x1398f90)(this, bonesPerVertex, bonesPerVertexSize, weights, weightsSize); } // 0x1398f90
        Unity::Collections::NativeArray<UnityEngine::BoneWeight1>* GetAllBoneWeights() { return il2cpp::call<Unity::Collections::NativeArray<UnityEngine::BoneWeight1>*(*)(Mesh*)>(0x1397220)(this); } // 0x1397220
        Unity::Collections::NativeArray<uint8_t>* GetBonesPerVertex() { return il2cpp::call<Unity::Collections::NativeArray<uint8_t>*(*)(Mesh*)>(0x1397830)(this); } // 0x1397830
        int32_t GetAllBoneWeightsArraySize() { return il2cpp::call<int32_t(*)(Mesh*)>(0x13971c0)(this); } // 0x13971c0
        int GetAllBoneWeightsArray() { return il2cpp::call<int(*)(Mesh*)>(0x13971f0)(this); } // 0x13971f0
        int GetBonesPerVertexArray() { return il2cpp::call<int(*)(Mesh*)>(0x1397800)(this); } // 0x1397800
        int32_t GetBindposeCount() { return il2cpp::call<int32_t(*)(Mesh*)>(0x1397420)(this); } // 0x1397420
        cs::array<UnityEngine::Matrix4x4>* get_bindposes() { return il2cpp::call<cs::array<UnityEngine::Matrix4x4>*(*)(Mesh*)>(0x139c7a0)(this); } // 0x139c7a0
        void set_bindposes(cs::array<UnityEngine::Matrix4x4>* value) { return il2cpp::call<void(*)(Mesh*, cs::array<UnityEngine::Matrix4x4>*)>(0x139cd60)(this, value); } // 0x139cd60
        void GetBoneWeightsNonAllocImpl(cs::array<UnityEngine::BoneWeight>* values) { return il2cpp::call<void(*)(Mesh*, cs::array<UnityEngine::BoneWeight>*)>(0x13976b0)(this, values); } // 0x13976b0
        void GetBindposesNonAllocImpl(cs::array<UnityEngine::Matrix4x4>* values) { return il2cpp::call<void(*)(Mesh*, cs::array<UnityEngine::Matrix4x4>*)>(0x1397450)(this, values); } // 0x1397450
        bool get_isReadable() { return il2cpp::call<bool(*)(Mesh*)>(0x139c950)(this); } // 0x139c950
        bool get_canAccess() { return il2cpp::call<bool(*)(Mesh*)>(0x139c870)(this); } // 0x139c870
        int32_t get_vertexCount() { return il2cpp::call<int32_t(*)(Mesh*)>(0x139ccf0)(this); } // 0x139ccf0
        int32_t get_subMeshCount() { return il2cpp::call<int32_t(*)(Mesh*)>(0x139c9c0)(this); } // 0x139c9c0
        void set_subMeshCount(int32_t value) { return il2cpp::call<void(*)(Mesh*, int32_t)>(0x139cee0)(this, value); } // 0x139cee0
        void SetSubMesh(int32_t index, UnityEngine::Rendering::SubMeshDescriptor desc, UnityEngine::Rendering::MeshUpdateFlags flags) { return il2cpp::call<void(*)(Mesh*, int32_t, UnityEngine::Rendering::SubMeshDescriptor, UnityEngine::Rendering::MeshUpdateFlags)>(0x139b0b0)(this, index, desc, flags); } // 0x139b0b0
        UnityEngine::Rendering::SubMeshDescriptor GetSubMesh(int32_t index) { return il2cpp::call<UnityEngine::Rendering::SubMeshDescriptor(*)(Mesh*, int32_t)>(0x13982f0)(this, index); } // 0x13982f0
        void SetAllSubMeshesAtOnceFromArray(cs::array<UnityEngine::Rendering::SubMeshDescriptor>* desc, int32_t start, int32_t count, UnityEngine::Rendering::MeshUpdateFlags flags) { return il2cpp::call<void(*)(Mesh*, cs::array<UnityEngine::Rendering::SubMeshDescriptor>*, int32_t, int32_t, UnityEngine::Rendering::MeshUpdateFlags)>(0x1399c90)(this, desc, start, count, flags); } // 0x1399c90
        void SetAllSubMeshesAtOnceFromNativeArray(int desc, int32_t start, int32_t count, UnityEngine::Rendering::MeshUpdateFlags flags) { return il2cpp::call<void(*)(Mesh*, int, int32_t, int32_t, UnityEngine::Rendering::MeshUpdateFlags)>(0x1399cd0)(this, desc, start, count, flags); } // 0x1399cd0
        UnityEngine::Bounds get_bounds() { return il2cpp::call<UnityEngine::Bounds(*)(Mesh*)>(0x139c830)(this); } // 0x139c830
        void set_bounds(UnityEngine::Bounds value) { return il2cpp::call<void(*)(Mesh*, UnityEngine::Bounds)>(0x139cdc0)(this, value); } // 0x139cdc0
        void ClearImpl(bool keepVertexLayout) { return il2cpp::call<void(*)(Mesh*, bool)>(0x1396fb0)(this, keepVertexLayout); } // 0x1396fb0
        void RecalculateBoundsImpl(UnityEngine::Rendering::MeshUpdateFlags flags) { return il2cpp::call<void(*)(Mesh*, UnityEngine::Rendering::MeshUpdateFlags)>(0x1399530)(this, flags); } // 0x1399530
        void RecalculateNormalsImpl(UnityEngine::Rendering::MeshUpdateFlags flags) { return il2cpp::call<void(*)(Mesh*, UnityEngine::Rendering::MeshUpdateFlags)>(0x13996f0)(this, flags); } // 0x13996f0
        void RecalculateTangentsImpl(UnityEngine::Rendering::MeshUpdateFlags flags) { return il2cpp::call<void(*)(Mesh*, UnityEngine::Rendering::MeshUpdateFlags)>(0x13998b0)(this, flags); } // 0x13998b0
        void MarkDynamicImpl() { return il2cpp::call<void(*)(Mesh*)>(0x1399100)(this); } // 0x1399100
        void MarkModified() { return il2cpp::call<void(*)(Mesh*)>(0x1399180)(this); } // 0x1399180
        void UploadMeshDataImpl(bool markNoLongerReadable) { return il2cpp::call<void(*)(Mesh*, bool)>(0x139c6a0)(this, markNoLongerReadable); } // 0x139c6a0
        UnityEngine::MeshTopology GetTopologyImpl(int32_t submesh) { return il2cpp::call<UnityEngine::MeshTopology(*)(Mesh*, int32_t)>(0x13983e0)(this, submesh); } // 0x13983e0
        void RecalculateUVDistributionMetricImpl(int32_t uvSetIndex, float uvAreaThreshold) { return il2cpp::call<void(*)(Mesh*, int32_t, float)>(0x1399a70)(this, uvSetIndex, uvAreaThreshold); } // 0x1399a70
        void RecalculateUVDistributionMetricsImpl(float uvAreaThreshold) { return il2cpp::call<void(*)(Mesh*, float)>(0x1399b80)(this, uvAreaThreshold); } // 0x1399b80
        float GetUVDistributionMetric(int32_t uvSetIndex) { return il2cpp::call<float(*)(Mesh*, int32_t)>(0x1398b90)(this, uvSetIndex); } // 0x1398b90
        void CombineMeshesImpl(cs::array<UnityEngine::CombineInstance>* combine, bool mergeSubMeshes, bool useMatrices, bool hasLightmapData) { return il2cpp::call<void(*)(Mesh*, cs::array<UnityEngine::CombineInstance>*, bool, bool, bool)>(0x1397010)(this, combine, mergeSubMeshes, useMatrices, hasLightmapData); } // 0x1397010
        void OptimizeImpl() { return il2cpp::call<void(*)(Mesh*)>(0x13991b0)(this); } // 0x13991b0
        void OptimizeIndexBuffersImpl() { return il2cpp::call<void(*)(Mesh*)>(0x13991e0)(this); } // 0x13991e0
        void OptimizeReorderVertexBufferImpl() { return il2cpp::call<void(*)(Mesh*)>(0x13992d0)(this); } // 0x13992d0
        UnityEngine::Rendering::VertexAttribute GetUVChannel(int32_t uvIndex) { return il2cpp::call<UnityEngine::Rendering::VertexAttribute(*)(Mesh*, int32_t)>(0x1398b20)(this, uvIndex); } // 0x1398b20
        int32_t DefaultDimensionForChannel(UnityEngine::Rendering::VertexAttribute channel) { return il2cpp::call<int32_t(*)(Mesh*, UnityEngine::Rendering::VertexAttribute)>(0x1397100)(this, channel); } // 0x1397100
        cs::array<Typeid_30>* GetAllocArrayFromChannel(UnityEngine::Rendering::VertexAttribute channel, UnityEngine::Rendering::VertexAttributeFormat format, int32_t dim) { return il2cpp::call<cs::array<Typeid_30>*(*)(Mesh*, UnityEngine::Rendering::VertexAttribute, UnityEngine::Rendering::VertexAttributeFormat, int32_t)>(0xa4ae0000)(this, channel, format, dim); } // 0xa4ae0000
        cs::array<Typeid_30>* GetAllocArrayFromChannel(UnityEngine::Rendering::VertexAttribute channel) { return il2cpp::call<cs::array<Typeid_30>*(*)(Mesh*, UnityEngine::Rendering::VertexAttribute)>(0xa4ae0000)(this, channel); } // 0xa4ae0000
        void SetSizedArrayForChannel(UnityEngine::Rendering::VertexAttribute channel, UnityEngine::Rendering::VertexAttributeFormat format, int32_t dim, System::Array* values, int32_t valuesArrayLength, int32_t valuesStart, int32_t valuesCount, UnityEngine::Rendering::MeshUpdateFlags flags) { return il2cpp::call<void(*)(Mesh*, UnityEngine::Rendering::VertexAttribute, UnityEngine::Rendering::VertexAttributeFormat, int32_t, System::Array*, int32_t, int32_t, int32_t, UnityEngine::Rendering::MeshUpdateFlags)>(0x139ab60)(this, channel, format, dim, values, valuesArrayLength, valuesStart, valuesCount, flags); } // 0x139ab60
        void SetSizedNativeArrayForChannel(UnityEngine::Rendering::VertexAttribute channel, UnityEngine::Rendering::VertexAttributeFormat format, int32_t dim, int values, int32_t valuesArrayLength, int32_t valuesStart, int32_t valuesCount, UnityEngine::Rendering::MeshUpdateFlags flags) { return il2cpp::call<void(*)(Mesh*, UnityEngine::Rendering::VertexAttribute, UnityEngine::Rendering::VertexAttributeFormat, int32_t, int, int32_t, int32_t, int32_t, UnityEngine::Rendering::MeshUpdateFlags)>(0x139adf0)(this, channel, format, dim, values, valuesArrayLength, valuesStart, valuesCount, flags); } // 0x139adf0
        void SetArrayForChannel(UnityEngine::Rendering::VertexAttribute channel, UnityEngine::Rendering::VertexAttributeFormat format, int32_t dim, cs::array<Typeid_30>* values, UnityEngine::Rendering::MeshUpdateFlags flags) { return il2cpp::call<void(*)(Mesh*, UnityEngine::Rendering::VertexAttribute, UnityEngine::Rendering::VertexAttributeFormat, int32_t, cs::array<Typeid_30>*, UnityEngine::Rendering::MeshUpdateFlags)>(0xa4ae0000)(this, channel, format, dim, values, flags); } // 0xa4ae0000
        void SetArrayForChannel(UnityEngine::Rendering::VertexAttribute channel, cs::array<Typeid_30>* values, UnityEngine::Rendering::MeshUpdateFlags flags) { return il2cpp::call<void(*)(Mesh*, UnityEngine::Rendering::VertexAttribute, cs::array<Typeid_30>*, UnityEngine::Rendering::MeshUpdateFlags)>(0xa4ae0000)(this, channel, values, flags); } // 0xa4ae0000
        void SetListForChannel(UnityEngine::Rendering::VertexAttribute channel, UnityEngine::Rendering::VertexAttributeFormat format, int32_t dim, System::Collections::Generic::List<Typeid_30>* values, int32_t start, int32_t length, UnityEngine::Rendering::MeshUpdateFlags flags) { return il2cpp::call<void(*)(Mesh*, UnityEngine::Rendering::VertexAttribute, UnityEngine::Rendering::VertexAttributeFormat, int32_t, System::Collections::Generic::List<Typeid_30>*, int32_t, int32_t, UnityEngine::Rendering::MeshUpdateFlags)>(0xa4ae0000)(this, channel, format, dim, values, start, length, flags); } // 0xa4ae0000
        void SetListForChannel(UnityEngine::Rendering::VertexAttribute channel, System::Collections::Generic::List<Typeid_30>* values, int32_t start, int32_t length, UnityEngine::Rendering::MeshUpdateFlags flags) { return il2cpp::call<void(*)(Mesh*, UnityEngine::Rendering::VertexAttribute, System::Collections::Generic::List<Typeid_30>*, int32_t, int32_t, UnityEngine::Rendering::MeshUpdateFlags)>(0xa4ae0000)(this, channel, values, start, length, flags); } // 0xa4ae0000
        void GetListForChannel(System::Collections::Generic::List<Typeid_30>* buffer, int32_t capacity, UnityEngine::Rendering::VertexAttribute channel, int32_t dim) { return il2cpp::call<void(*)(Mesh*, System::Collections::Generic::List<Typeid_30>*, int32_t, UnityEngine::Rendering::VertexAttribute, int32_t)>(0xa4ae0000)(this, buffer, capacity, channel, dim); } // 0xa4ae0000
        void GetListForChannel(System::Collections::Generic::List<Typeid_30>* buffer, int32_t capacity, UnityEngine::Rendering::VertexAttribute channel, int32_t dim, UnityEngine::Rendering::VertexAttributeFormat channelType) { return il2cpp::call<void(*)(Mesh*, System::Collections::Generic::List<Typeid_30>*, int32_t, UnityEngine::Rendering::VertexAttribute, int32_t, UnityEngine::Rendering::VertexAttributeFormat)>(0xa4ae0000)(this, buffer, capacity, channel, dim, channelType); } // 0xa4ae0000
        cs::array<UnityEngine::Vector3>* get_vertices() { return il2cpp::call<cs::array<UnityEngine::Vector3>*(*)(Mesh*)>(0x139cd20)(this); } // 0x139cd20
        void set_vertices(cs::array<UnityEngine::Vector3>* value) { return il2cpp::call<void(*)(Mesh*, cs::array<UnityEngine::Vector3>*)>(0x139d200)(this, value); } // 0x139d200
        cs::array<UnityEngine::Vector3>* get_normals() { return il2cpp::call<cs::array<UnityEngine::Vector3>*(*)(Mesh*)>(0x139c980)(this); } // 0x139c980
        void set_normals(cs::array<UnityEngine::Vector3>* value) { return il2cpp::call<void(*)(Mesh*, cs::array<UnityEngine::Vector3>*)>(0x139cea0)(this, value); } // 0x139cea0
        cs::array<UnityEngine::Vector4>* get_tangents() { return il2cpp::call<cs::array<UnityEngine::Vector4>*(*)(Mesh*)>(0x139c9f0)(this); } // 0x139c9f0
        void set_tangents(cs::array<UnityEngine::Vector4>* value) { return il2cpp::call<void(*)(Mesh*, cs::array<UnityEngine::Vector4>*)>(0x139cf10)(this, value); } // 0x139cf10
        cs::array<UnityEngine::Vector2>* get_uv() { return il2cpp::call<cs::array<UnityEngine::Vector2>*(*)(Mesh*)>(0x139cc80)(this); } // 0x139cc80
        void set_uv(cs::array<UnityEngine::Vector2>* value) { return il2cpp::call<void(*)(Mesh*, cs::array<UnityEngine::Vector2>*)>(0x139d1c0)(this, value); } // 0x139d1c0
        cs::array<UnityEngine::Vector2>* get_uv2() { return il2cpp::call<cs::array<UnityEngine::Vector2>*(*)(Mesh*)>(0x139cac0)(this); } // 0x139cac0
        void set_uv2(cs::array<UnityEngine::Vector2>* value) { return il2cpp::call<void(*)(Mesh*, cs::array<UnityEngine::Vector2>*)>(0x139d000)(this, value); } // 0x139d000
        cs::array<UnityEngine::Vector2>* get_uv3() { return il2cpp::call<cs::array<UnityEngine::Vector2>*(*)(Mesh*)>(0x139cb00)(this); } // 0x139cb00
        void set_uv3(cs::array<UnityEngine::Vector2>* value) { return il2cpp::call<void(*)(Mesh*, cs::array<UnityEngine::Vector2>*)>(0x139d040)(this, value); } // 0x139d040
        cs::array<UnityEngine::Vector2>* get_uv4() { return il2cpp::call<cs::array<UnityEngine::Vector2>*(*)(Mesh*)>(0x139cb40)(this); } // 0x139cb40
        void set_uv4(cs::array<UnityEngine::Vector2>* value) { return il2cpp::call<void(*)(Mesh*, cs::array<UnityEngine::Vector2>*)>(0x139d080)(this, value); } // 0x139d080
        cs::array<UnityEngine::Vector2>* get_uv5() { return il2cpp::call<cs::array<UnityEngine::Vector2>*(*)(Mesh*)>(0x139cb80)(this); } // 0x139cb80
        void set_uv5(cs::array<UnityEngine::Vector2>* value) { return il2cpp::call<void(*)(Mesh*, cs::array<UnityEngine::Vector2>*)>(0x139d0c0)(this, value); } // 0x139d0c0
        cs::array<UnityEngine::Vector2>* get_uv6() { return il2cpp::call<cs::array<UnityEngine::Vector2>*(*)(Mesh*)>(0x139cbc0)(this); } // 0x139cbc0
        void set_uv6(cs::array<UnityEngine::Vector2>* value) { return il2cpp::call<void(*)(Mesh*, cs::array<UnityEngine::Vector2>*)>(0x139d100)(this, value); } // 0x139d100
        cs::array<UnityEngine::Vector2>* get_uv7() { return il2cpp::call<cs::array<UnityEngine::Vector2>*(*)(Mesh*)>(0x139cc00)(this); } // 0x139cc00
        void set_uv7(cs::array<UnityEngine::Vector2>* value) { return il2cpp::call<void(*)(Mesh*, cs::array<UnityEngine::Vector2>*)>(0x139d140)(this, value); } // 0x139d140
        cs::array<UnityEngine::Vector2>* get_uv8() { return il2cpp::call<cs::array<UnityEngine::Vector2>*(*)(Mesh*)>(0x139cc40)(this); } // 0x139cc40
        void set_uv8(cs::array<UnityEngine::Vector2>* value) { return il2cpp::call<void(*)(Mesh*, cs::array<UnityEngine::Vector2>*)>(0x139d180)(this, value); } // 0x139d180
        cs::array<UnityEngine::Color>* get_colors() { return il2cpp::call<cs::array<UnityEngine::Color>*(*)(Mesh*)>(0x139c8e0)(this); } // 0x139c8e0
        void set_colors(cs::array<UnityEngine::Color>* value) { return il2cpp::call<void(*)(Mesh*, cs::array<UnityEngine::Color>*)>(0x139ce30)(this, value); } // 0x139ce30
        cs::array<UnityEngine::Color32>* get_colors32() { return il2cpp::call<cs::array<UnityEngine::Color32>*(*)(Mesh*)>(0x139c8a0)(this); } // 0x139c8a0
        void set_colors32(cs::array<UnityEngine::Color32>* value) { return il2cpp::call<void(*)(Mesh*, cs::array<UnityEngine::Color32>*)>(0x139cdf0)(this, value); } // 0x139cdf0
        void GetVertices(System::Collections::Generic::List<UnityEngine::Vector3>* vertices) { return il2cpp::call<void(*)(Mesh*, System::Collections::Generic::List<UnityEngine::Vector3>*)>(0x1398e80)(this, vertices); } // 0x1398e80
        void SetVertices(System::Collections::Generic::List<UnityEngine::Vector3>* inVertices) { return il2cpp::call<void(*)(Mesh*, System::Collections::Generic::List<UnityEngine::Vector3>*)>(0x139c510)(this, inVertices); } // 0x139c510
        void SetVertices(System::Collections::Generic::List<UnityEngine::Vector3>* inVertices, int32_t start, int32_t length) { return il2cpp::call<void(*)(Mesh*, System::Collections::Generic::List<UnityEngine::Vector3>*, int32_t, int32_t)>(0x139c4d0)(this, inVertices, start, length); } // 0x139c4d0
        void SetVertices(System::Collections::Generic::List<UnityEngine::Vector3>* inVertices, int32_t start, int32_t length, UnityEngine::Rendering::MeshUpdateFlags flags) { return il2cpp::call<void(*)(Mesh*, System::Collections::Generic::List<UnityEngine::Vector3>*, int32_t, int32_t, UnityEngine::Rendering::MeshUpdateFlags)>(0x139c580)(this, inVertices, start, length, flags); } // 0x139c580
        void SetVertices(cs::array<UnityEngine::Vector3>* inVertices) { return il2cpp::call<void(*)(Mesh*, cs::array<UnityEngine::Vector3>*)>(0x139c610)(this, inVertices); } // 0x139c610
        void SetVertices(cs::array<UnityEngine::Vector3>* inVertices, int32_t start, int32_t length) { return il2cpp::call<void(*)(Mesh*, cs::array<UnityEngine::Vector3>*, int32_t, int32_t)>(0x139c5d0)(this, inVertices, start, length); } // 0x139c5d0
        void SetVertices(cs::array<UnityEngine::Vector3>* inVertices, int32_t start, int32_t length, UnityEngine::Rendering::MeshUpdateFlags flags) { return il2cpp::call<void(*)(Mesh*, cs::array<UnityEngine::Vector3>*, int32_t, int32_t, UnityEngine::Rendering::MeshUpdateFlags)>(0x139c660)(this, inVertices, start, length, flags); } // 0x139c660
        void SetVertices(Unity::Collections::NativeArray<Typeid_30>* inVertices) { return il2cpp::call<void(*)(Mesh*, Unity::Collections::NativeArray<Typeid_30>*)>(0xa4ae0000)(this, inVertices); } // 0xa4ae0000
        void SetVertices(Unity::Collections::NativeArray<Typeid_30>* inVertices, int32_t start, int32_t length) { return il2cpp::call<void(*)(Mesh*, Unity::Collections::NativeArray<Typeid_30>*, int32_t, int32_t)>(0xa4ae0000)(this, inVertices, start, length); } // 0xa4ae0000
        void SetVertices(Unity::Collections::NativeArray<Typeid_30>* inVertices, int32_t start, int32_t length, UnityEngine::Rendering::MeshUpdateFlags flags) { return il2cpp::call<void(*)(Mesh*, Unity::Collections::NativeArray<Typeid_30>*, int32_t, int32_t, UnityEngine::Rendering::MeshUpdateFlags)>(0xa4ae0000)(this, inVertices, start, length, flags); } // 0xa4ae0000
        void GetNormals(System::Collections::Generic::List<UnityEngine::Vector3>* normals) { return il2cpp::call<void(*)(Mesh*, System::Collections::Generic::List<UnityEngine::Vector3>*)>(0x1398210)(this, normals); } // 0x1398210
        void SetNormals(System::Collections::Generic::List<UnityEngine::Vector3>* inNormals) { return il2cpp::call<void(*)(Mesh*, System::Collections::Generic::List<UnityEngine::Vector3>*)>(0x139a990)(this, inNormals); } // 0x139a990
        void SetNormals(System::Collections::Generic::List<UnityEngine::Vector3>* inNormals, int32_t start, int32_t length) { return il2cpp::call<void(*)(Mesh*, System::Collections::Generic::List<UnityEngine::Vector3>*, int32_t, int32_t)>(0x139aa40)(this, inNormals, start, length); } // 0x139aa40
        void SetNormals(System::Collections::Generic::List<UnityEngine::Vector3>* inNormals, int32_t start, int32_t length, UnityEngine::Rendering::MeshUpdateFlags flags) { return il2cpp::call<void(*)(Mesh*, System::Collections::Generic::List<UnityEngine::Vector3>*, int32_t, int32_t, UnityEngine::Rendering::MeshUpdateFlags)>(0x139ab10)(this, inNormals, start, length, flags); } // 0x139ab10
        void SetNormals(cs::array<UnityEngine::Vector3>* inNormals) { return il2cpp::call<void(*)(Mesh*, cs::array<UnityEngine::Vector3>*)>(0x139aac0)(this, inNormals); } // 0x139aac0
        void SetNormals(cs::array<UnityEngine::Vector3>* inNormals, int32_t start, int32_t length) { return il2cpp::call<void(*)(Mesh*, cs::array<UnityEngine::Vector3>*, int32_t, int32_t)>(0x139aa80)(this, inNormals, start, length); } // 0x139aa80
        void SetNormals(cs::array<UnityEngine::Vector3>* inNormals, int32_t start, int32_t length, UnityEngine::Rendering::MeshUpdateFlags flags) { return il2cpp::call<void(*)(Mesh*, cs::array<UnityEngine::Vector3>*, int32_t, int32_t, UnityEngine::Rendering::MeshUpdateFlags)>(0x139aa00)(this, inNormals, start, length, flags); } // 0x139aa00
        void SetNormals(Unity::Collections::NativeArray<Typeid_30>* inNormals) { return il2cpp::call<void(*)(Mesh*, Unity::Collections::NativeArray<Typeid_30>*)>(0xa4ae0000)(this, inNormals); } // 0xa4ae0000
        void SetNormals(Unity::Collections::NativeArray<Typeid_30>* inNormals, int32_t start, int32_t length) { return il2cpp::call<void(*)(Mesh*, Unity::Collections::NativeArray<Typeid_30>*, int32_t, int32_t)>(0xa4ae0000)(this, inNormals, start, length); } // 0xa4ae0000
        void SetNormals(Unity::Collections::NativeArray<Typeid_30>* inNormals, int32_t start, int32_t length, UnityEngine::Rendering::MeshUpdateFlags flags) { return il2cpp::call<void(*)(Mesh*, Unity::Collections::NativeArray<Typeid_30>*, int32_t, int32_t, UnityEngine::Rendering::MeshUpdateFlags)>(0xa4ae0000)(this, inNormals, start, length, flags); } // 0xa4ae0000
        void GetTangents(System::Collections::Generic::List<UnityEngine::Vector4>* tangents) { return il2cpp::call<void(*)(Mesh*, System::Collections::Generic::List<UnityEngine::Vector4>*)>(0x1398330)(this, tangents); } // 0x1398330
        void SetTangents(System::Collections::Generic::List<UnityEngine::Vector4>* inTangents) { return il2cpp::call<void(*)(Mesh*, System::Collections::Generic::List<UnityEngine::Vector4>*)>(0x139b510)(this, inTangents); } // 0x139b510
        void SetTangents(System::Collections::Generic::List<UnityEngine::Vector4>* inTangents, int32_t start, int32_t length) { return il2cpp::call<void(*)(Mesh*, System::Collections::Generic::List<UnityEngine::Vector4>*, int32_t, int32_t)>(0x139b4d0)(this, inTangents, start, length); } // 0x139b4d0
        void SetTangents(System::Collections::Generic::List<UnityEngine::Vector4>* inTangents, int32_t start, int32_t length, UnityEngine::Rendering::MeshUpdateFlags flags) { return il2cpp::call<void(*)(Mesh*, System::Collections::Generic::List<UnityEngine::Vector4>*, int32_t, int32_t, UnityEngine::Rendering::MeshUpdateFlags)>(0x139b650)(this, inTangents, start, length, flags); } // 0x139b650
        void SetTangents(cs::array<UnityEngine::Vector4>* inTangents) { return il2cpp::call<void(*)(Mesh*, cs::array<UnityEngine::Vector4>*)>(0x139b580)(this, inTangents); } // 0x139b580
        void SetTangents(cs::array<UnityEngine::Vector4>* inTangents, int32_t start, int32_t length) { return il2cpp::call<void(*)(Mesh*, cs::array<UnityEngine::Vector4>*, int32_t, int32_t)>(0x139b5d0)(this, inTangents, start, length); } // 0x139b5d0
        void SetTangents(cs::array<UnityEngine::Vector4>* inTangents, int32_t start, int32_t length, UnityEngine::Rendering::MeshUpdateFlags flags) { return il2cpp::call<void(*)(Mesh*, cs::array<UnityEngine::Vector4>*, int32_t, int32_t, UnityEngine::Rendering::MeshUpdateFlags)>(0x139b610)(this, inTangents, start, length, flags); } // 0x139b610
        void SetTangents(Unity::Collections::NativeArray<Typeid_30>* inTangents) { return il2cpp::call<void(*)(Mesh*, Unity::Collections::NativeArray<Typeid_30>*)>(0xa4ae0000)(this, inTangents); } // 0xa4ae0000
        void SetTangents(Unity::Collections::NativeArray<Typeid_30>* inTangents, int32_t start, int32_t length) { return il2cpp::call<void(*)(Mesh*, Unity::Collections::NativeArray<Typeid_30>*, int32_t, int32_t)>(0xa4ae0000)(this, inTangents, start, length); } // 0xa4ae0000
        void SetTangents(Unity::Collections::NativeArray<Typeid_30>* inTangents, int32_t start, int32_t length, UnityEngine::Rendering::MeshUpdateFlags flags) { return il2cpp::call<void(*)(Mesh*, Unity::Collections::NativeArray<Typeid_30>*, int32_t, int32_t, UnityEngine::Rendering::MeshUpdateFlags)>(0xa4ae0000)(this, inTangents, start, length, flags); } // 0xa4ae0000
        void GetColors(System::Collections::Generic::List<UnityEngine::Color>* colors) { return il2cpp::call<void(*)(Mesh*, System::Collections::Generic::List<UnityEngine::Color>*)>(0x1397910)(this, colors); } // 0x1397910
        void SetColors(System::Collections::Generic::List<UnityEngine::Color>* inColors) { return il2cpp::call<void(*)(Mesh*, System::Collections::Generic::List<UnityEngine::Color>*)>(0x139a020)(this, inColors); } // 0x139a020
        void SetColors(System::Collections::Generic::List<UnityEngine::Color>* inColors, int32_t start, int32_t length) { return il2cpp::call<void(*)(Mesh*, System::Collections::Generic::List<UnityEngine::Color>*, int32_t, int32_t)>(0x1399e40)(this, inColors, start, length); } // 0x1399e40
        void SetColors(System::Collections::Generic::List<UnityEngine::Color>* inColors, int32_t start, int32_t length, UnityEngine::Rendering::MeshUpdateFlags flags) { return il2cpp::call<void(*)(Mesh*, System::Collections::Generic::List<UnityEngine::Color>*, int32_t, int32_t, UnityEngine::Rendering::MeshUpdateFlags)>(0x1399ec0)(this, inColors, start, length, flags); } // 0x1399ec0
        void SetColors(cs::array<UnityEngine::Color>* inColors) { return il2cpp::call<void(*)(Mesh*, cs::array<UnityEngine::Color>*)>(0x139a160)(this, inColors); } // 0x139a160
        void SetColors(cs::array<UnityEngine::Color>* inColors, int32_t start, int32_t length) { return il2cpp::call<void(*)(Mesh*, cs::array<UnityEngine::Color>*, int32_t, int32_t)>(0x139a120)(this, inColors, start, length); } // 0x139a120
        void SetColors(cs::array<UnityEngine::Color>* inColors, int32_t start, int32_t length, UnityEngine::Rendering::MeshUpdateFlags flags) { return il2cpp::call<void(*)(Mesh*, cs::array<UnityEngine::Color>*, int32_t, int32_t, UnityEngine::Rendering::MeshUpdateFlags)>(0x1399fe0)(this, inColors, start, length, flags); } // 0x1399fe0
        void GetColors(System::Collections::Generic::List<UnityEngine::Color32>* colors) { return il2cpp::call<void(*)(Mesh*, System::Collections::Generic::List<UnityEngine::Color32>*)>(0x13979c0)(this, colors); } // 0x13979c0
        void SetColors(System::Collections::Generic::List<UnityEngine::Color32>* inColors) { return il2cpp::call<void(*)(Mesh*, System::Collections::Generic::List<UnityEngine::Color32>*)>(0x1399f60)(this, inColors); } // 0x1399f60
        void SetColors(System::Collections::Generic::List<UnityEngine::Color32>* inColors, int32_t start, int32_t length) { return il2cpp::call<void(*)(Mesh*, System::Collections::Generic::List<UnityEngine::Color32>*, int32_t, int32_t)>(0x1399f10)(this, inColors, start, length); } // 0x1399f10
        void SetColors(System::Collections::Generic::List<UnityEngine::Color32>* inColors, int32_t start, int32_t length, UnityEngine::Rendering::MeshUpdateFlags flags) { return il2cpp::call<void(*)(Mesh*, System::Collections::Generic::List<UnityEngine::Color32>*, int32_t, int32_t, UnityEngine::Rendering::MeshUpdateFlags)>(0x139a1b0)(this, inColors, start, length, flags); } // 0x139a1b0
        void SetColors(cs::array<UnityEngine::Color32>* inColors) { return il2cpp::call<void(*)(Mesh*, cs::array<UnityEngine::Color32>*)>(0x139a0d0)(this, inColors); } // 0x139a0d0
        void SetColors(cs::array<UnityEngine::Color32>* inColors, int32_t start, int32_t length) { return il2cpp::call<void(*)(Mesh*, cs::array<UnityEngine::Color32>*, int32_t, int32_t)>(0x1399e80)(this, inColors, start, length); } // 0x1399e80
        void SetColors(cs::array<UnityEngine::Color32>* inColors, int32_t start, int32_t length, UnityEngine::Rendering::MeshUpdateFlags flags) { return il2cpp::call<void(*)(Mesh*, cs::array<UnityEngine::Color32>*, int32_t, int32_t, UnityEngine::Rendering::MeshUpdateFlags)>(0x139a090)(this, inColors, start, length, flags); } // 0x139a090
        void SetColors(Unity::Collections::NativeArray<Typeid_30>* inColors) { return il2cpp::call<void(*)(Mesh*, Unity::Collections::NativeArray<Typeid_30>*)>(0xa4ae0000)(this, inColors); } // 0xa4ae0000
        void SetColors(Unity::Collections::NativeArray<Typeid_30>* inColors, int32_t start, int32_t length) { return il2cpp::call<void(*)(Mesh*, Unity::Collections::NativeArray<Typeid_30>*, int32_t, int32_t)>(0xa4ae0000)(this, inColors, start, length); } // 0xa4ae0000
        void SetColors(Unity::Collections::NativeArray<Typeid_30>* inColors, int32_t start, int32_t length, UnityEngine::Rendering::MeshUpdateFlags flags) { return il2cpp::call<void(*)(Mesh*, Unity::Collections::NativeArray<Typeid_30>*, int32_t, int32_t, UnityEngine::Rendering::MeshUpdateFlags)>(0xa4ae0000)(this, inColors, start, length, flags); } // 0xa4ae0000
        void SetUvsImpl(int32_t uvIndex, int32_t dim, System::Collections::Generic::List<Typeid_30>* uvs, int32_t start, int32_t length, UnityEngine::Rendering::MeshUpdateFlags flags) { return il2cpp::call<void(*)(Mesh*, int32_t, int32_t, System::Collections::Generic::List<Typeid_30>*, int32_t, int32_t, UnityEngine::Rendering::MeshUpdateFlags)>(0xa4ae0000)(this, uvIndex, dim, uvs, start, length, flags); } // 0xa4ae0000
        void SetUVs(int32_t channel, System::Collections::Generic::List<UnityEngine::Vector2>* uvs) { return il2cpp::call<void(*)(Mesh*, int32_t, System::Collections::Generic::List<UnityEngine::Vector2>*)>(0x139c2a0)(this, channel, uvs); } // 0x139c2a0
        void SetUVs(int32_t channel, System::Collections::Generic::List<UnityEngine::Vector3>* uvs) { return il2cpp::call<void(*)(Mesh*, int32_t, System::Collections::Generic::List<UnityEngine::Vector3>*)>(0x139c000)(this, channel, uvs); } // 0x139c000
        void SetUVs(int32_t channel, System::Collections::Generic::List<UnityEngine::Vector4>* uvs) { return il2cpp::call<void(*)(Mesh*, int32_t, System::Collections::Generic::List<UnityEngine::Vector4>*)>(0x139c080)(this, channel, uvs); } // 0x139c080
        void SetUVs(int32_t channel, System::Collections::Generic::List<UnityEngine::Vector2>* uvs, int32_t start, int32_t length) { return il2cpp::call<void(*)(Mesh*, int32_t, System::Collections::Generic::List<UnityEngine::Vector2>*, int32_t, int32_t)>(0x139bf40)(this, channel, uvs, start, length); } // 0x139bf40
        void SetUVs(int32_t channel, System::Collections::Generic::List<UnityEngine::Vector2>* uvs, int32_t start, int32_t length, UnityEngine::Rendering::MeshUpdateFlags flags) { return il2cpp::call<void(*)(Mesh*, int32_t, System::Collections::Generic::List<UnityEngine::Vector2>*, int32_t, int32_t, UnityEngine::Rendering::MeshUpdateFlags)>(0x139c190)(this, channel, uvs, start, length, flags); } // 0x139c190
        void SetUVs(int32_t channel, System::Collections::Generic::List<UnityEngine::Vector3>* uvs, int32_t start, int32_t length) { return il2cpp::call<void(*)(Mesh*, int32_t, System::Collections::Generic::List<UnityEngine::Vector3>*, int32_t, int32_t)>(0x139c1e0)(this, channel, uvs, start, length); } // 0x139c1e0
        void SetUVs(int32_t channel, System::Collections::Generic::List<UnityEngine::Vector3>* uvs, int32_t start, int32_t length, UnityEngine::Rendering::MeshUpdateFlags flags) { return il2cpp::call<void(*)(Mesh*, int32_t, System::Collections::Generic::List<UnityEngine::Vector3>*, int32_t, int32_t, UnityEngine::Rendering::MeshUpdateFlags)>(0x139be90)(this, channel, uvs, start, length, flags); } // 0x139be90
        void SetUVs(int32_t channel, System::Collections::Generic::List<UnityEngine::Vector4>* uvs, int32_t start, int32_t length) { return il2cpp::call<void(*)(Mesh*, int32_t, System::Collections::Generic::List<UnityEngine::Vector4>*, int32_t, int32_t)>(0x139c140)(this, channel, uvs, start, length); } // 0x139c140
        void SetUVs(int32_t channel, System::Collections::Generic::List<UnityEngine::Vector4>* uvs, int32_t start, int32_t length, UnityEngine::Rendering::MeshUpdateFlags flags) { return il2cpp::call<void(*)(Mesh*, int32_t, System::Collections::Generic::List<UnityEngine::Vector4>*, int32_t, int32_t, UnityEngine::Rendering::MeshUpdateFlags)>(0x139be40)(this, channel, uvs, start, length, flags); } // 0x139be40
        void SetUvsImpl(int32_t uvIndex, int32_t dim, System::Array* uvs, int32_t arrayStart, int32_t arraySize, UnityEngine::Rendering::MeshUpdateFlags flags) { return il2cpp::call<void(*)(Mesh*, int32_t, int32_t, System::Array*, int32_t, int32_t, UnityEngine::Rendering::MeshUpdateFlags)>(0x139c320)(this, uvIndex, dim, uvs, arrayStart, arraySize, flags); } // 0x139c320
        void SetUVs(int32_t channel, cs::array<UnityEngine::Vector2>* uvs) { return il2cpp::call<void(*)(Mesh*, int32_t, cs::array<UnityEngine::Vector2>*)>(0x139c260)(this, channel, uvs); } // 0x139c260
        void SetUVs(int32_t channel, cs::array<UnityEngine::Vector3>* uvs) { return il2cpp::call<void(*)(Mesh*, int32_t, cs::array<UnityEngine::Vector3>*)>(0x139c100)(this, channel, uvs); } // 0x139c100
        void SetUVs(int32_t channel, cs::array<UnityEngine::Vector4>* uvs) { return il2cpp::call<void(*)(Mesh*, int32_t, cs::array<UnityEngine::Vector4>*)>(0x139bf90)(this, channel, uvs); } // 0x139bf90
        void SetUVs(int32_t channel, cs::array<UnityEngine::Vector2>* uvs, int32_t start, int32_t length) { return il2cpp::call<void(*)(Mesh*, int32_t, cs::array<UnityEngine::Vector2>*, int32_t, int32_t)>(0x139bfd0)(this, channel, uvs, start, length); } // 0x139bfd0
        void SetUVs(int32_t channel, cs::array<UnityEngine::Vector2>* uvs, int32_t start, int32_t length, UnityEngine::Rendering::MeshUpdateFlags flags) { return il2cpp::call<void(*)(Mesh*, int32_t, cs::array<UnityEngine::Vector2>*, int32_t, int32_t, UnityEngine::Rendering::MeshUpdateFlags)>(0x139be10)(this, channel, uvs, start, length, flags); } // 0x139be10
        void SetUVs(int32_t channel, cs::array<UnityEngine::Vector3>* uvs, int32_t start, int32_t length) { return il2cpp::call<void(*)(Mesh*, int32_t, cs::array<UnityEngine::Vector3>*, int32_t, int32_t)>(0x139bee0)(this, channel, uvs, start, length); } // 0x139bee0
        void SetUVs(int32_t channel, cs::array<UnityEngine::Vector3>* uvs, int32_t start, int32_t length, UnityEngine::Rendering::MeshUpdateFlags flags) { return il2cpp::call<void(*)(Mesh*, int32_t, cs::array<UnityEngine::Vector3>*, int32_t, int32_t, UnityEngine::Rendering::MeshUpdateFlags)>(0x139c230)(this, channel, uvs, start, length, flags); } // 0x139c230
        void SetUVs(int32_t channel, cs::array<UnityEngine::Vector4>* uvs, int32_t start, int32_t length) { return il2cpp::call<void(*)(Mesh*, int32_t, cs::array<UnityEngine::Vector4>*, int32_t, int32_t)>(0x139bf10)(this, channel, uvs, start, length); } // 0x139bf10
        void SetUVs(int32_t channel, cs::array<UnityEngine::Vector4>* uvs, int32_t start, int32_t length, UnityEngine::Rendering::MeshUpdateFlags flags) { return il2cpp::call<void(*)(Mesh*, int32_t, cs::array<UnityEngine::Vector4>*, int32_t, int32_t, UnityEngine::Rendering::MeshUpdateFlags)>(0x139bde0)(this, channel, uvs, start, length, flags); } // 0x139bde0
        void SetUVs(int32_t channel, Unity::Collections::NativeArray<Typeid_30>* uvs) { return il2cpp::call<void(*)(Mesh*, int32_t, Unity::Collections::NativeArray<Typeid_30>*)>(0xa4ae0000)(this, channel, uvs); } // 0xa4ae0000
        void SetUVs(int32_t channel, Unity::Collections::NativeArray<Typeid_30>* uvs, int32_t start, int32_t length) { return il2cpp::call<void(*)(Mesh*, int32_t, Unity::Collections::NativeArray<Typeid_30>*, int32_t, int32_t)>(0xa4ae0000)(this, channel, uvs, start, length); } // 0xa4ae0000
        void SetUVs(int32_t channel, Unity::Collections::NativeArray<Typeid_30>* uvs, int32_t start, int32_t length, UnityEngine::Rendering::MeshUpdateFlags flags) { return il2cpp::call<void(*)(Mesh*, int32_t, Unity::Collections::NativeArray<Typeid_30>*, int32_t, int32_t, UnityEngine::Rendering::MeshUpdateFlags)>(0xa4ae0000)(this, channel, uvs, start, length, flags); } // 0xa4ae0000
        void GetUVsImpl(int32_t uvIndex, System::Collections::Generic::List<Typeid_30>* uvs, int32_t dim) { return il2cpp::call<void(*)(Mesh*, int32_t, System::Collections::Generic::List<Typeid_30>*, int32_t)>(0xa4ae0000)(this, uvIndex, uvs, dim); } // 0xa4ae0000
        void GetUVs(int32_t channel, System::Collections::Generic::List<UnityEngine::Vector2>* uvs) { return il2cpp::call<void(*)(Mesh*, int32_t, System::Collections::Generic::List<UnityEngine::Vector2>*)>(0x1398c40)(this, channel, uvs); } // 0x1398c40
        void GetUVs(int32_t channel, System::Collections::Generic::List<UnityEngine::Vector3>* uvs) { return il2cpp::call<void(*)(Mesh*, int32_t, System::Collections::Generic::List<UnityEngine::Vector3>*)>(0x1398c00)(this, channel, uvs); } // 0x1398c00
        void GetUVs(int32_t channel, System::Collections::Generic::List<UnityEngine::Vector4>* uvs) { return il2cpp::call<void(*)(Mesh*, int32_t, System::Collections::Generic::List<UnityEngine::Vector4>*)>(0x1398bc0)(this, channel, uvs); } // 0x1398bc0
        int32_t get_vertexAttributeCount() { return il2cpp::call<int32_t(*)(Mesh*)>(0x1398c80)(this); } // 0x1398c80
        cs::array<UnityEngine::Rendering::VertexAttributeDescriptor>* GetVertexAttributes() { return il2cpp::call<cs::array<UnityEngine::Rendering::VertexAttributeDescriptor>*(*)(Mesh*)>(0x1398e10)(this); } // 0x1398e10
        int32_t GetVertexAttributes(cs::array<UnityEngine::Rendering::VertexAttributeDescriptor>* attributes) { return il2cpp::call<int32_t(*)(Mesh*, cs::array<UnityEngine::Rendering::VertexAttributeDescriptor>*)>(0x1398db0)(this, attributes); } // 0x1398db0
        int32_t GetVertexAttributes(System::Collections::Generic::List<UnityEngine::Rendering::VertexAttributeDescriptor>* attributes) { return il2cpp::call<int32_t(*)(Mesh*, System::Collections::Generic::List<UnityEngine::Rendering::VertexAttributeDescriptor>*)>(0x1398de0)(this, attributes); } // 0x1398de0
        void SetVertexBufferParams(int32_t vertexCount, cs::array<UnityEngine::Rendering::VertexAttributeDescriptor>* attributes) { return il2cpp::call<void(*)(Mesh*, int32_t, cs::array<UnityEngine::Rendering::VertexAttributeDescriptor>*)>(0x139c3e0)(this, vertexCount, attributes); } // 0x139c3e0
        void SetVertexBufferParams(int32_t vertexCount, Unity::Collections::NativeArray<UnityEngine::Rendering::VertexAttributeDescriptor>* attributes) { return il2cpp::call<void(*)(Mesh*, int32_t, Unity::Collections::NativeArray<UnityEngine::Rendering::VertexAttributeDescriptor>*)>(0x139c450)(this, vertexCount, attributes); } // 0x139c450
        void SetVertexBufferData(Unity::Collections::NativeArray<Typeid_30>* data, int32_t dataStart, int32_t meshBufferStart, int32_t count, int32_t stream, UnityEngine::Rendering::MeshUpdateFlags flags) { return il2cpp::call<void(*)(Mesh*, Unity::Collections::NativeArray<Typeid_30>*, int32_t, int32_t, int32_t, int32_t, UnityEngine::Rendering::MeshUpdateFlags)>(0xa4ae0000)(this, data, dataStart, meshBufferStart, count, stream, flags); } // 0xa4ae0000
        void SetVertexBufferData(cs::array<Typeid_30>* data, int32_t dataStart, int32_t meshBufferStart, int32_t count, int32_t stream, UnityEngine::Rendering::MeshUpdateFlags flags) { return il2cpp::call<void(*)(Mesh*, cs::array<Typeid_30>*, int32_t, int32_t, int32_t, int32_t, UnityEngine::Rendering::MeshUpdateFlags)>(0xa4ae0000)(this, data, dataStart, meshBufferStart, count, stream, flags); } // 0xa4ae0000
        void SetVertexBufferData(System::Collections::Generic::List<Typeid_30>* data, int32_t dataStart, int32_t meshBufferStart, int32_t count, int32_t stream, UnityEngine::Rendering::MeshUpdateFlags flags) { return il2cpp::call<void(*)(Mesh*, System::Collections::Generic::List<Typeid_30>*, int32_t, int32_t, int32_t, int32_t, UnityEngine::Rendering::MeshUpdateFlags)>(0xa4ae0000)(this, data, dataStart, meshBufferStart, count, stream, flags); } // 0xa4ae0000
        UnityEngine::Mesh+MeshDataArray AcquireReadOnlyMeshData(UnityEngine::Mesh* mesh) { return il2cpp::call<UnityEngine::Mesh+MeshDataArray(*)(Mesh*, UnityEngine::Mesh*)>(0x1396730)(this, mesh); } // 0x1396730
        UnityEngine::Mesh+MeshDataArray AcquireReadOnlyMeshData(cs::array<UnityEngine::Mesh>* meshes) { return il2cpp::call<UnityEngine::Mesh+MeshDataArray(*)(Mesh*, cs::array<UnityEngine::Mesh>*)>(0x13965e0)(this, meshes); } // 0x13965e0
        UnityEngine::Mesh+MeshDataArray AcquireReadOnlyMeshData(System::Collections::Generic::List<UnityEngine::Mesh>* meshes) { return il2cpp::call<UnityEngine::Mesh+MeshDataArray(*)(Mesh*, System::Collections::Generic::List<UnityEngine::Mesh>*)>(0x1396670)(this, meshes); } // 0x1396670
        UnityEngine::Mesh+MeshDataArray AllocateWritableMeshData(int32_t meshCount) { return il2cpp::call<UnityEngine::Mesh+MeshDataArray(*)(Mesh*, int32_t)>(0x13967a0)(this, meshCount); } // 0x13967a0
        void ApplyAndDisposeWritableMeshData(UnityEngine::Mesh+MeshDataArray data, UnityEngine::Mesh* mesh, UnityEngine::Rendering::MeshUpdateFlags flags) { return il2cpp::call<void(*)(Mesh*, UnityEngine::Mesh+MeshDataArray, UnityEngine::Mesh*, UnityEngine::Rendering::MeshUpdateFlags)>(0x13968f0)(this, data, mesh, flags); } // 0x13968f0
        void ApplyAndDisposeWritableMeshData(UnityEngine::Mesh+MeshDataArray data, cs::array<UnityEngine::Mesh>* meshes, UnityEngine::Rendering::MeshUpdateFlags flags) { return il2cpp::call<void(*)(Mesh*, UnityEngine::Mesh+MeshDataArray, cs::array<UnityEngine::Mesh>*, UnityEngine::Rendering::MeshUpdateFlags)>(0x13967d0)(this, data, meshes, flags); } // 0x13967d0
        void ApplyAndDisposeWritableMeshData(UnityEngine::Mesh+MeshDataArray data, System::Collections::Generic::List<UnityEngine::Mesh>* meshes, UnityEngine::Rendering::MeshUpdateFlags flags) { return il2cpp::call<void(*)(Mesh*, UnityEngine::Mesh+MeshDataArray, System::Collections::Generic::List<UnityEngine::Mesh>*, UnityEngine::Rendering::MeshUpdateFlags)>(0x1396ad0)(this, data, meshes, flags); } // 0x1396ad0
        void PrintErrorCantAccessIndices() { return il2cpp::call<void(*)(Mesh*)>(0x13994b0)(this); } // 0x13994b0
        bool CheckCanAccessSubmesh(int32_t submesh, bool errorAboutTriangles) { return il2cpp::call<bool(*)(Mesh*, int32_t, bool)>(0x1396c80)(this, submesh, errorAboutTriangles); } // 0x1396c80
        bool CheckCanAccessSubmeshTriangles(int32_t submesh) { return il2cpp::call<bool(*)(Mesh*, int32_t)>(0x1396c60)(this, submesh); } // 0x1396c60
        bool CheckCanAccessSubmeshIndices(int32_t submesh) { return il2cpp::call<bool(*)(Mesh*, int32_t)>(0x1396c40)(this, submesh); } // 0x1396c40
        cs::array<int32_t>* get_triangles() { return il2cpp::call<cs::array<int32_t>*(*)(Mesh*)>(0x139ca30)(this); } // 0x139ca30
        void set_triangles(cs::array<int32_t>* value) { return il2cpp::call<void(*)(Mesh*, cs::array<int32_t>*)>(0x139cf50)(this, value); } // 0x139cf50
        cs::array<int32_t>* GetTriangles(int32_t submesh) { return il2cpp::call<cs::array<int32_t>*(*)(Mesh*, int32_t)>(0x1398750)(this, submesh); } // 0x1398750
        cs::array<int32_t>* GetTriangles(int32_t submesh, bool applyBaseVertex) { return il2cpp::call<cs::array<int32_t>*(*)(Mesh*, int32_t, bool)>(0x1398aa0)(this, submesh, applyBaseVertex); } // 0x1398aa0
        void GetTriangles(System::Collections::Generic::List<int32_t>* triangles, int32_t submesh) { return il2cpp::call<void(*)(Mesh*, System::Collections::Generic::List<int32_t>*, int32_t)>(0x13985e0)(this, triangles, submesh); } // 0x13985e0
        void GetTriangles(System::Collections::Generic::List<int32_t>* triangles, int32_t submesh, bool applyBaseVertex) { return il2cpp::call<void(*)(Mesh*, System::Collections::Generic::List<int32_t>*, int32_t, bool)>(0x1398930)(this, triangles, submesh, applyBaseVertex); } // 0x1398930
        void GetTriangles(System::Collections::Generic::List<uint16_t>* triangles, int32_t submesh, bool applyBaseVertex) { return il2cpp::call<void(*)(Mesh*, System::Collections::Generic::List<uint16_t>*, int32_t, bool)>(0x13987c0)(this, triangles, submesh, applyBaseVertex); } // 0x13987c0
        cs::array<int32_t>* GetIndices(int32_t submesh) { return il2cpp::call<cs::array<int32_t>*(*)(Mesh*, int32_t)>(0x1398140)(this, submesh); } // 0x1398140
        cs::array<int32_t>* GetIndices(int32_t submesh, bool applyBaseVertex) { return il2cpp::call<cs::array<int32_t>*(*)(Mesh*, int32_t, bool)>(0x13980c0)(this, submesh, applyBaseVertex); } // 0x13980c0
        void GetIndices(System::Collections::Generic::List<int32_t>* indices, int32_t submesh) { return il2cpp::call<void(*)(Mesh*, System::Collections::Generic::List<int32_t>*, int32_t)>(0x1397cd0)(this, indices, submesh); } // 0x1397cd0
        void GetIndices(System::Collections::Generic::List<int32_t>* indices, int32_t submesh, bool applyBaseVertex) { return il2cpp::call<void(*)(Mesh*, System::Collections::Generic::List<int32_t>*, int32_t, bool)>(0x1397f70)(this, indices, submesh, applyBaseVertex); } // 0x1397f70
        void GetIndices(System::Collections::Generic::List<uint16_t>* indices, int32_t submesh, bool applyBaseVertex) { return il2cpp::call<void(*)(Mesh*, System::Collections::Generic::List<uint16_t>*, int32_t, bool)>(0x1397e20)(this, indices, submesh, applyBaseVertex); } // 0x1397e20
        void SetIndexBufferData(Unity::Collections::NativeArray<Typeid_30>* data, int32_t dataStart, int32_t meshBufferStart, int32_t count, UnityEngine::Rendering::MeshUpdateFlags flags) { return il2cpp::call<void(*)(Mesh*, Unity::Collections::NativeArray<Typeid_30>*, int32_t, int32_t, int32_t, UnityEngine::Rendering::MeshUpdateFlags)>(0xa4ae0000)(this, data, dataStart, meshBufferStart, count, flags); } // 0xa4ae0000
        void SetIndexBufferData(cs::array<Typeid_30>* data, int32_t dataStart, int32_t meshBufferStart, int32_t count, UnityEngine::Rendering::MeshUpdateFlags flags) { return il2cpp::call<void(*)(Mesh*, cs::array<Typeid_30>*, int32_t, int32_t, int32_t, UnityEngine::Rendering::MeshUpdateFlags)>(0xa4ae0000)(this, data, dataStart, meshBufferStart, count, flags); } // 0xa4ae0000
        void SetIndexBufferData(System::Collections::Generic::List<Typeid_30>* data, int32_t dataStart, int32_t meshBufferStart, int32_t count, UnityEngine::Rendering::MeshUpdateFlags flags) { return il2cpp::call<void(*)(Mesh*, System::Collections::Generic::List<Typeid_30>*, int32_t, int32_t, int32_t, UnityEngine::Rendering::MeshUpdateFlags)>(0xa4ae0000)(this, data, dataStart, meshBufferStart, count, flags); } // 0xa4ae0000
        uint32_t GetIndexStart(int32_t submesh) { return il2cpp::call<uint32_t(*)(Mesh*, int32_t)>(0x1397b80)(this, submesh); } // 0x1397b80
        uint32_t GetIndexCount(int32_t submesh) { return il2cpp::call<uint32_t(*)(Mesh*, int32_t)>(0x1397ab0)(this, submesh); } // 0x1397ab0
        uint32_t GetBaseVertex(int32_t submesh) { return il2cpp::call<uint32_t(*)(Mesh*, int32_t)>(0x1397380)(this, submesh); } // 0x1397380
        void CheckIndicesArrayRange(int32_t valuesLength, int32_t start, int32_t length) { return il2cpp::call<void(*)(Mesh*, int32_t, int32_t, int32_t)>(0x1396d90)(this, valuesLength, start, length); } // 0x1396d90
        void SetTrianglesImpl(int32_t submesh, UnityEngine::Rendering::IndexFormat indicesFormat, System::Array* triangles, int32_t trianglesArrayLength, int32_t start, int32_t length, bool calculateBounds, int32_t baseVertex) { return il2cpp::call<void(*)(Mesh*, int32_t, UnityEngine::Rendering::IndexFormat, System::Array*, int32_t, int32_t, int32_t, bool, int32_t)>(0x139b6a0)(this, submesh, indicesFormat, triangles, trianglesArrayLength, start, length, calculateBounds, baseVertex); } // 0x139b6a0
        void SetTriangles(cs::array<int32_t>* triangles, int32_t submesh) { return il2cpp::call<void(*)(Mesh*, cs::array<int32_t>*, int32_t)>(0x139b810)(this, triangles, submesh); } // 0x139b810
        void SetTriangles(cs::array<int32_t>* triangles, int32_t submesh, bool calculateBounds) { return il2cpp::call<void(*)(Mesh*, cs::array<int32_t>*, int32_t, bool)>(0x139bd50)(this, triangles, submesh, calculateBounds); } // 0x139bd50
        void SetTriangles(cs::array<int32_t>* triangles, int32_t submesh, bool calculateBounds, int32_t baseVertex) { return il2cpp::call<void(*)(Mesh*, cs::array<int32_t>*, int32_t, bool, int32_t)>(0x139b700)(this, triangles, submesh, calculateBounds, baseVertex); } // 0x139b700
        void SetTriangles(cs::array<int32_t>* triangles, int32_t trianglesStart, int32_t trianglesLength, int32_t submesh, bool calculateBounds, int32_t baseVertex) { return il2cpp::call<void(*)(Mesh*, cs::array<int32_t>*, int32_t, int32_t, int32_t, bool, int32_t)>(0x139b790)(this, triangles, trianglesStart, trianglesLength, submesh, calculateBounds, baseVertex); } // 0x139b790
        void SetTriangles(cs::array<uint16_t>* triangles, int32_t submesh, bool calculateBounds, int32_t baseVertex) { return il2cpp::call<void(*)(Mesh*, cs::array<uint16_t>*, int32_t, bool, int32_t)>(0x139b980)(this, triangles, submesh, calculateBounds, baseVertex); } // 0x139b980
        void SetTriangles(cs::array<uint16_t>* triangles, int32_t trianglesStart, int32_t trianglesLength, int32_t submesh, bool calculateBounds, int32_t baseVertex) { return il2cpp::call<void(*)(Mesh*, cs::array<uint16_t>*, int32_t, int32_t, int32_t, bool, int32_t)>(0x139bcb0)(this, triangles, trianglesStart, trianglesLength, submesh, calculateBounds, baseVertex); } // 0x139bcb0
        void SetTriangles(System::Collections::Generic::List<int32_t>* triangles, int32_t submesh) { return il2cpp::call<void(*)(Mesh*, System::Collections::Generic::List<int32_t>*, int32_t)>(0x139bd30)(this, triangles, submesh); } // 0x139bd30
        void SetTriangles(System::Collections::Generic::List<int32_t>* triangles, int32_t submesh, bool calculateBounds) { return il2cpp::call<void(*)(Mesh*, System::Collections::Generic::List<int32_t>*, int32_t, bool)>(0x139b8a0)(this, triangles, submesh, calculateBounds); } // 0x139b8a0
        void SetTriangles(System::Collections::Generic::List<int32_t>* triangles, int32_t submesh, bool calculateBounds, int32_t baseVertex) { return il2cpp::call<void(*)(Mesh*, System::Collections::Generic::List<int32_t>*, int32_t, bool, int32_t)>(0x139bad0)(this, triangles, submesh, calculateBounds, baseVertex); } // 0x139bad0
        void SetTriangles(System::Collections::Generic::List<int32_t>* triangles, int32_t trianglesStart, int32_t trianglesLength, int32_t submesh, bool calculateBounds, int32_t baseVertex) { return il2cpp::call<void(*)(Mesh*, System::Collections::Generic::List<int32_t>*, int32_t, int32_t, int32_t, bool, int32_t)>(0x139b8c0)(this, triangles, trianglesStart, trianglesLength, submesh, calculateBounds, baseVertex); } // 0x139b8c0
        void SetTriangles(System::Collections::Generic::List<uint16_t>* triangles, int32_t submesh, bool calculateBounds, int32_t baseVertex) { return il2cpp::call<void(*)(Mesh*, System::Collections::Generic::List<uint16_t>*, int32_t, bool, int32_t)>(0x139bbc0)(this, triangles, submesh, calculateBounds, baseVertex); } // 0x139bbc0
        void SetTriangles(System::Collections::Generic::List<uint16_t>* triangles, int32_t trianglesStart, int32_t trianglesLength, int32_t submesh, bool calculateBounds, int32_t baseVertex) { return il2cpp::call<void(*)(Mesh*, System::Collections::Generic::List<uint16_t>*, int32_t, int32_t, int32_t, bool, int32_t)>(0x139ba10)(this, triangles, trianglesStart, trianglesLength, submesh, calculateBounds, baseVertex); } // 0x139ba10
        void SetIndices(cs::array<int32_t>* indices, UnityEngine::MeshTopology topology, int32_t submesh) { return il2cpp::call<void(*)(Mesh*, cs::array<int32_t>*, UnityEngine::MeshTopology, int32_t)>(0x139a830)(this, indices, topology, submesh); } // 0x139a830
        void SetIndices(cs::array<int32_t>* indices, UnityEngine::MeshTopology topology, int32_t submesh, bool calculateBounds) { return il2cpp::call<void(*)(Mesh*, cs::array<int32_t>*, UnityEngine::MeshTopology, int32_t, bool)>(0x139a2b0)(this, indices, topology, submesh, calculateBounds); } // 0x139a2b0
        void SetIndices(cs::array<int32_t>* indices, UnityEngine::MeshTopology topology, int32_t submesh, bool calculateBounds, int32_t baseVertex) { return il2cpp::call<void(*)(Mesh*, cs::array<int32_t>*, UnityEngine::MeshTopology, int32_t, bool, int32_t)>(0x139a430)(this, indices, topology, submesh, calculateBounds, baseVertex); } // 0x139a430
        void SetIndices(cs::array<int32_t>* indices, int32_t indicesStart, int32_t indicesLength, UnityEngine::MeshTopology topology, int32_t submesh, bool calculateBounds, int32_t baseVertex) { return il2cpp::call<void(*)(Mesh*, cs::array<int32_t>*, int32_t, int32_t, UnityEngine::MeshTopology, int32_t, bool, int32_t)>(0x139a540)(this, indices, indicesStart, indicesLength, topology, submesh, calculateBounds, baseVertex); } // 0x139a540
        void SetIndices(cs::array<uint16_t>* indices, UnityEngine::MeshTopology topology, int32_t submesh, bool calculateBounds, int32_t baseVertex) { return il2cpp::call<void(*)(Mesh*, cs::array<uint16_t>*, UnityEngine::MeshTopology, int32_t, bool, int32_t)>(0x139a8c0)(this, indices, topology, submesh, calculateBounds, baseVertex); } // 0x139a8c0
        void SetIndices(cs::array<uint16_t>* indices, int32_t indicesStart, int32_t indicesLength, UnityEngine::MeshTopology topology, int32_t submesh, bool calculateBounds, int32_t baseVertex) { return il2cpp::call<void(*)(Mesh*, cs::array<uint16_t>*, int32_t, int32_t, UnityEngine::MeshTopology, int32_t, bool, int32_t)>(0x139a4c0)(this, indices, indicesStart, indicesLength, topology, submesh, calculateBounds, baseVertex); } // 0x139a4c0
        void SetIndices(Unity::Collections::NativeArray<Typeid_30>* indices, UnityEngine::MeshTopology topology, int32_t submesh, bool calculateBounds, int32_t baseVertex) { return il2cpp::call<void(*)(Mesh*, Unity::Collections::NativeArray<Typeid_30>*, UnityEngine::MeshTopology, int32_t, bool, int32_t)>(0xa4ae0000)(this, indices, topology, submesh, calculateBounds, baseVertex); } // 0xa4ae0000
        void SetIndices(Unity::Collections::NativeArray<Typeid_30>* indices, int32_t indicesStart, int32_t indicesLength, UnityEngine::MeshTopology topology, int32_t submesh, bool calculateBounds, int32_t baseVertex) { return il2cpp::call<void(*)(Mesh*, Unity::Collections::NativeArray<Typeid_30>*, int32_t, int32_t, UnityEngine::MeshTopology, int32_t, bool, int32_t)>(0xa4ae0000)(this, indices, indicesStart, indicesLength, topology, submesh, calculateBounds, baseVertex); } // 0xa4ae0000
        void SetIndices(System::Collections::Generic::List<int32_t>* indices, UnityEngine::MeshTopology topology, int32_t submesh, bool calculateBounds, int32_t baseVertex) { return il2cpp::call<void(*)(Mesh*, System::Collections::Generic::List<int32_t>*, UnityEngine::MeshTopology, int32_t, bool, int32_t)>(0x139a340)(this, indices, topology, submesh, calculateBounds, baseVertex); } // 0x139a340
        void SetIndices(System::Collections::Generic::List<int32_t>* indices, int32_t indicesStart, int32_t indicesLength, UnityEngine::MeshTopology topology, int32_t submesh, bool calculateBounds, int32_t baseVertex) { return il2cpp::call<void(*)(Mesh*, System::Collections::Generic::List<int32_t>*, int32_t, int32_t, UnityEngine::MeshTopology, int32_t, bool, int32_t)>(0x139a770)(this, indices, indicesStart, indicesLength, topology, submesh, calculateBounds, baseVertex); } // 0x139a770
        void SetIndices(System::Collections::Generic::List<uint16_t>* indices, UnityEngine::MeshTopology topology, int32_t submesh, bool calculateBounds, int32_t baseVertex) { return il2cpp::call<void(*)(Mesh*, System::Collections::Generic::List<uint16_t>*, UnityEngine::MeshTopology, int32_t, bool, int32_t)>(0x139a5c0)(this, indices, topology, submesh, calculateBounds, baseVertex); } // 0x139a5c0
        void SetIndices(System::Collections::Generic::List<uint16_t>* indices, int32_t indicesStart, int32_t indicesLength, UnityEngine::MeshTopology topology, int32_t submesh, bool calculateBounds, int32_t baseVertex) { return il2cpp::call<void(*)(Mesh*, System::Collections::Generic::List<uint16_t>*, int32_t, int32_t, UnityEngine::MeshTopology, int32_t, bool, int32_t)>(0x139a6b0)(this, indices, indicesStart, indicesLength, topology, submesh, calculateBounds, baseVertex); } // 0x139a6b0
        void SetSubMeshes(cs::array<UnityEngine::Rendering::SubMeshDescriptor>* desc, int32_t start, int32_t count, UnityEngine::Rendering::MeshUpdateFlags flags) { return il2cpp::call<void(*)(Mesh*, cs::array<UnityEngine::Rendering::SubMeshDescriptor>*, int32_t, int32_t, UnityEngine::Rendering::MeshUpdateFlags)>(0x139b160)(this, desc, start, count, flags); } // 0x139b160
        void SetSubMeshes(cs::array<UnityEngine::Rendering::SubMeshDescriptor>* desc, UnityEngine::Rendering::MeshUpdateFlags flags) { return il2cpp::call<void(*)(Mesh*, cs::array<UnityEngine::Rendering::SubMeshDescriptor>*, UnityEngine::Rendering::MeshUpdateFlags)>(0x139b440)(this, desc, flags); } // 0x139b440
        void SetSubMeshes(System::Collections::Generic::List<UnityEngine::Rendering::SubMeshDescriptor>* desc, int32_t start, int32_t count, UnityEngine::Rendering::MeshUpdateFlags flags) { return il2cpp::call<void(*)(Mesh*, System::Collections::Generic::List<UnityEngine::Rendering::SubMeshDescriptor>*, int32_t, int32_t, UnityEngine::Rendering::MeshUpdateFlags)>(0x139b480)(this, desc, start, count, flags); } // 0x139b480
        void SetSubMeshes(System::Collections::Generic::List<UnityEngine::Rendering::SubMeshDescriptor>* desc, UnityEngine::Rendering::MeshUpdateFlags flags) { return il2cpp::call<void(*)(Mesh*, System::Collections::Generic::List<UnityEngine::Rendering::SubMeshDescriptor>*, UnityEngine::Rendering::MeshUpdateFlags)>(0x139b0f0)(this, desc, flags); } // 0x139b0f0
        void SetSubMeshes(Unity::Collections::NativeArray<Typeid_30>* desc, int32_t start, int32_t count, UnityEngine::Rendering::MeshUpdateFlags flags) { return il2cpp::call<void(*)(Mesh*, Unity::Collections::NativeArray<Typeid_30>*, int32_t, int32_t, UnityEngine::Rendering::MeshUpdateFlags)>(0xa4ae0000)(this, desc, start, count, flags); } // 0xa4ae0000
        void SetSubMeshes(Unity::Collections::NativeArray<Typeid_30>* desc, UnityEngine::Rendering::MeshUpdateFlags flags) { return il2cpp::call<void(*)(Mesh*, Unity::Collections::NativeArray<Typeid_30>*, UnityEngine::Rendering::MeshUpdateFlags)>(0xa4ae0000)(this, desc, flags); } // 0xa4ae0000
        void GetBindposes(System::Collections::Generic::List<UnityEngine::Matrix4x4>* bindposes) { return il2cpp::call<void(*)(Mesh*, System::Collections::Generic::List<UnityEngine::Matrix4x4>*)>(0x1397480)(this, bindposes); } // 0x1397480
        void GetBoneWeights(System::Collections::Generic::List<UnityEngine::BoneWeight>* boneWeights) { return il2cpp::call<void(*)(Mesh*, System::Collections::Generic::List<UnityEngine::BoneWeight>*)>(0x13976e0)(this, boneWeights); } // 0x13976e0
        cs::array<UnityEngine::BoneWeight>* get_boneWeights() { return il2cpp::call<cs::array<UnityEngine::BoneWeight>*(*)(Mesh*)>(0x1397680)(this); } // 0x1397680
        void set_boneWeights(cs::array<UnityEngine::BoneWeight>* value) { return il2cpp::call<void(*)(Mesh*, cs::array<UnityEngine::BoneWeight>*)>(0x1399d50)(this, value); } // 0x1399d50
        void Clear(bool keepVertexLayout) { return il2cpp::call<void(*)(Mesh*, bool)>(0x1396fb0)(this, keepVertexLayout); } // 0x1396fb0
        void Clear() { return il2cpp::call<void(*)(Mesh*)>(0x1396fe0)(this); } // 0x1396fe0
        void RecalculateBounds() { return il2cpp::call<void(*)(Mesh*)>(0x1399630)(this); } // 0x1399630
        void RecalculateNormals() { return il2cpp::call<void(*)(Mesh*)>(0x13997f0)(this); } // 0x13997f0
        void RecalculateTangents() { return il2cpp::call<void(*)(Mesh*)>(0x13999b0)(this); } // 0x13999b0
        void RecalculateBounds(UnityEngine::Rendering::MeshUpdateFlags flags) { return il2cpp::call<void(*)(Mesh*, UnityEngine::Rendering::MeshUpdateFlags)>(0x1399560)(this, flags); } // 0x1399560
        void RecalculateNormals(UnityEngine::Rendering::MeshUpdateFlags flags) { return il2cpp::call<void(*)(Mesh*, UnityEngine::Rendering::MeshUpdateFlags)>(0x1399720)(this, flags); } // 0x1399720
        void RecalculateTangents(UnityEngine::Rendering::MeshUpdateFlags flags) { return il2cpp::call<void(*)(Mesh*, UnityEngine::Rendering::MeshUpdateFlags)>(0x13998e0)(this, flags); } // 0x13998e0
        void RecalculateUVDistributionMetric(int32_t uvSetIndex, float uvAreaThreshold) { return il2cpp::call<void(*)(Mesh*, int32_t, float)>(0x1399ab0)(this, uvSetIndex, uvAreaThreshold); } // 0x1399ab0
        void RecalculateUVDistributionMetrics(float uvAreaThreshold) { return il2cpp::call<void(*)(Mesh*, float)>(0x1399bc0)(this, uvAreaThreshold); } // 0x1399bc0
        void MarkDynamic() { return il2cpp::call<void(*)(Mesh*)>(0x1399130)(this); } // 0x1399130
        void UploadMeshData(bool markNoLongerReadable) { return il2cpp::call<void(*)(Mesh*, bool)>(0x139c6d0)(this, markNoLongerReadable); } // 0x139c6d0
        void Optimize() { return il2cpp::call<void(*)(Mesh*)>(0x13993c0)(this); } // 0x13993c0
        void OptimizeIndexBuffers() { return il2cpp::call<void(*)(Mesh*)>(0x1399210)(this); } // 0x1399210
        void OptimizeReorderVertexBuffer() { return il2cpp::call<void(*)(Mesh*)>(0x1399300)(this); } // 0x1399300
        UnityEngine::MeshTopology GetTopology(int32_t submesh) { return il2cpp::call<UnityEngine::MeshTopology(*)(Mesh*, int32_t)>(0x1398410)(this, submesh); } // 0x1398410
        void CombineMeshes(cs::array<UnityEngine::CombineInstance>* combine, bool mergeSubMeshes, bool useMatrices, bool hasLightmapData) { return il2cpp::call<void(*)(Mesh*, cs::array<UnityEngine::CombineInstance>*, bool, bool, bool)>(0x1397010)(this, combine, mergeSubMeshes, useMatrices, hasLightmapData); } // 0x1397010
        void CombineMeshes(cs::array<UnityEngine::CombineInstance>* combine, bool mergeSubMeshes, bool useMatrices) { return il2cpp::call<void(*)(Mesh*, cs::array<UnityEngine::CombineInstance>*, bool, bool)>(0x1397050)(this, combine, mergeSubMeshes, useMatrices); } // 0x1397050
        void CombineMeshes(cs::array<UnityEngine::CombineInstance>* combine, bool mergeSubMeshes) { return il2cpp::call<void(*)(Mesh*, cs::array<UnityEngine::CombineInstance>*, bool)>(0x1397080)(this, combine, mergeSubMeshes); } // 0x1397080
        void CombineMeshes(cs::array<UnityEngine::CombineInstance>* combine) { return il2cpp::call<void(*)(Mesh*, cs::array<UnityEngine::CombineInstance>*)>(0x13970c0)(this, combine); } // 0x13970c0
        void GetVertexAttribute_Injected(int32_t index, UnityEngine::Rendering::VertexAttributeDescriptor ret) { return il2cpp::call<void(*)(Mesh*, int32_t, UnityEngine::Rendering::VertexAttributeDescriptor)>(0x1398d10)(this, index, ret); } // 0x1398d10
        void SetSubMesh_Injected(int32_t index, UnityEngine::Rendering::SubMeshDescriptor desc, UnityEngine::Rendering::MeshUpdateFlags flags) { return il2cpp::call<void(*)(Mesh*, int32_t, UnityEngine::Rendering::SubMeshDescriptor, UnityEngine::Rendering::MeshUpdateFlags)>(0x139b070)(this, index, desc, flags); } // 0x139b070
        void GetSubMesh_Injected(int32_t index, UnityEngine::Rendering::SubMeshDescriptor ret) { return il2cpp::call<void(*)(Mesh*, int32_t, UnityEngine::Rendering::SubMeshDescriptor)>(0x13982c0)(this, index, ret); } // 0x13982c0
        void get_bounds_Injected(UnityEngine::Bounds ret) { return il2cpp::call<void(*)(Mesh*, UnityEngine::Bounds)>(0x139c800)(this, ret); } // 0x139c800
        void set_bounds_Injected(UnityEngine::Bounds value) { return il2cpp::call<void(*)(Mesh*, UnityEngine::Bounds)>(0x139cd90)(this, value); } // 0x139cd90

    };

}
namespace ark {

        template<> struct meta_statics<UnityEngine::Mesh> {
        };

}

